import discord
import random
import requests
from discord.ext import commands
import os
import youtube_dl
import requests
import time
import asyncio

print(os.listdir('images'))

intents = discord.Intents.default()
intents.message_content = True

bot = commands.Bot(command_prefix='$', intents=intents)

@bot.event
async def on_ready():
    print(f'We have logged in as {bot.user}')
 
@bot.command()
async def hello(ctx):
    await ctx.send(f'Привет! Я бот {bot.user}!')

@bot.command()
async def heh(ctx, count_heh = 5):
    await ctx.send("he" * count_heh)

@bot.command()
async def calculate(ctx, *, expression):
    try:
        result = eval(expression)
        await ctx.send(f'Result: {result}')
    except Exception as e:
        await ctx.send(f'Error: {e}')


@bot.command()
async def repeat(ctx, times: int, content='repeating...'):
    """Repeats a message multiple times."""
    for i in range(times):
        await ctx.send(content)

@bot.command(description='For when you wanna settle the score some other way')
async def choose(ctx, *choices: str):
    """Chooses between multiple choices."""
    await ctx.send(random.choice(choices))

@bot.command()
async def yes_or_no(ctx):
    response = random.choice(['Да', 'Нет'])
    await ctx.send(response)


@bot.command()
async def mem(ctx):
    images = os.listdir('images')
    img_name = random.choice(images)
    with open(f'images/{img_name}','rb') as f:
            picture = discord.File(f)
    await ctx.send(file=picture)

@bot.command()
async def animals(ctx):
    images = os.listdir('images2')
    img_name = random.choice(images)
    with open(f'images/{img_name}', 'rb') as f:
            picture = discord.File(f)
    await ctx.send(file=picture)

def get_duck_image_url():    
    url = 'https://random-d.uk/api/random'
    res = requests.get(url)
    data = res.json()
    return data['url']

@bot.command('duck')
async def duck(ctx):
    '''По команде duck вызывает функцию get_duck_image_url'''
    image_url = get_duck_image_url()
    await ctx.send(image_url)

async def play_song(ctx, url):
    # Создаем экземпляр загрузчика YouTube
    ydl_opts = {'format': 'bestaudio', 'noplaylist':'True'}
    with youtube_dl.YoutubeDL(ydl_opts) as ydl:
        info = ydl.extract_info(url, download=False)
        url2 = info['formats'][0]['url']
    # Подключаемся к голосовому каналу
    voice_channel = ctx.author.voice.channel
    voice_client = await voice_channel.connect()
    # Проигрываем аудио в голосовом канале
    source = await discord.FFmpegOpusAudio.from_probe(url2, method='fallback')
    player = voice_client.play(source)
    # Ожидаем окончания проигрывания
    await ctx.send(f'Сейчас играет: {info["title"]}')
    while not player.is_done():
        await asyncio.sleep(1)
    # Отключаемся от голосового канала
    await voice_client.disconnect()

bot.run("")
